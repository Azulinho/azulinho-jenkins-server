---

# Creates a user for jenkins with the correct ssh key retrieved from the secrets
# repository
#
- name: create user for jenkins
  user: name=jenkins
    comment="Jenkins CI"
    home="/var/lib/jenkins"
    shell="/bin/bash"
  tags: ['jenkins']

- name: make sure /var/lib/jenkins/.ssh exists
  file: path=/var/lib/jenkins/.ssh
    owner=jenkins
    group=jenkins
    mode=0700
    state=directory
  tags: ['jenkins']

# We install a specific version of jenkins to avoid compability
# issues with plugins
#
- name: unlock jenkins version in yum
  lineinfile: dest=/etc/yum/pluginconf.d/versionlock.list
    state=absent
    regexp='^.:jenkins-.*'
  tags: ['jenkins', 'versionlock']

- name: Ensure jenkins is installed
  yum: name=jenkins-{{ jenkins['version']}}
    enablerepo=epel
    state=present
  register: _jenkins_install
  tags: ['jenkins', 'versionlock']

- name: lock jenkins
  command: yum versionlock jenkins-{{ jenkins['version'] }}
  tags: ['jenkins', 'versionlock']

# configure jenkins to our liking
#
- name: Configure Jenkins Port
  sudo: yes
  when: jenkins['port'] is defined
  lineinfile: dest=/etc/default/jenkins
    regexp=^HTTP_PORT=
    line=HTTP_PORT={{ jenkins['port'] }}
    create=yes
  tags: ['jenkins']

- name: Configure Jenkins Prefix
  sudo: yes
  when: prefix is defined
  lineinfile: dest=/etc/default/jenkins
    regexp=^PREFIX=
    line=PREFIX={{ jenkins['prefix'] }}
  tags: ['jenkins']

- name: Configure Jenkins E-mail
  sudo: yes
  when: email is defined
  template: src=hudson.tasks.Mailer.xml.j2
    dest={{ jenkins['lib'] }}/hudson.tasks.Mailer.xml
    owner=jenkins
    group=jenkins
    mode=0644
  tags: ['jenkins']


- name: Deploy main jenkins config.xml file
  template: dest=/var/lib/jenkins/config.xml
    src=config.xml.j2
  tags: ['jenkins']

- name: update jenkins main config.xml file
  file: path=/var/lib/jenkins/config.xml
        state=file
        owner=jenkins
        group=jenkins
  tags: ['jenkins']


# Start jenkins, we need it up and running before we are able to download
# the CLI tool
- name: Ensure jenkins is running
  service: name=jenkins
    enabled=yes
    state=running
  tags: ['jenkins', 'initscripts']

# If Jenkins is installed or updated, wait for pulling the Jenkins CLI
# # wish there was a jenkins-cli rpm package
#
- name: "{{ startup_delay_s | default(90) }}s delay while starting Jenkins"
  wait_for: port={{ jenkins['port'] }}
    delay={{ startup_delay_s | default(90) }}
  when: _jenkins_install.changed
  tags: ['jenkins']

# Create Jenkins CLI destination directory
- name: "Create Jenkins CLI destination directory"
  file: path={{ jenkins['dest'] }}
    state=directory
  sudo: yes
  tags: ['jenkins', 'jenkinscli']

# Get Jenkins CLI from localhost
- name: Get Jenkins CLI
  get_url: url=http://localhost:{{ jenkins['port'] }}/jnlpJars/jenkins-cli.jar
    dest={{ jenkins['cli_dest'] }}
    mode=0440
  sudo: yes
  tags: ['jenkins', 'jenkinscli']

